enum vehicleColor in {blue, red, green};
enum carColor in {red, green};
enum truckColor in {blue};
struct speed {
	int minSpeed;
	int maxSpeed;
	int avgSpeed;
}
struct dimension {
	int height in [150..200];
	int width in [175..210];
	int length in [350..500];
}
root Vehicle {
	vehicleColor color;
	int vehicleDimension_height;
	speed vehicleSpeed;
	dimension vehicleDimension {
		height is (Car ? Car.carDimension.height : Truck.truckDimension.height);
		width is (Car ? Car.carDimension.width : Truck.truckDimension.width);
		length is (Car ? Car.carDimension.length: Truck.truckDimension.length);
	}
	group oneof {
		Car {
			carColor color;
			dimension carDimension;
			this.carDimension.height == 150;
			this.carDimension.width == 175;
			this.carDimension.length == 350;
			ifin: parent.color == this.color;	
		},
		Truck {
			truckColor color;
			dimension truckDimension;
			ifin: parent.color == this.color;
			ifin: parent.vehicleDimension == this.truckDimension;
		}
	}
}