real cPrice in [300..1750];
real cWeight;
int cMemory in {512, 1024, 2048, 4096};
enum cColor in {Red, Blue, Yellow, Pink};
bool cGamer; 
bool cPortable;
struct cSize {
	real width;
	real height;
	real length;	
}
root Computer {
	 cPrice price;
	 cWeight weight;
	 cMemory memory;
	 cColor color;
	 cGamer gamer;
	 cSize size;
	 cPortable portable;
	 Apple -> (this.size.width == Apple.size.width) && (this.size.height == Apple.size.height) && 
	 		  (this.size.length == Apple.size.height) && (this.weight == Apple.weight);
	 group oneof {
	 	Acer {
	 		ifin: parent.price == 950;
	 		ifin: parent.weight == 2.10;
	 		ifin: parent.memory == 2048;
	 		ifin: parent.color in {Red, Yellow};
	 		ifin: parent.gamer == true;
	 		ifin: parent.size.width == 25.4;
	 		ifin: parent.size.length == 30.9;
	 		ifin: parent.size.height == 2.8; 	
	 	},
	 	Apple {
	 		cSize size {
	 			width in [20..25];
	 			height in [1.8..2.5];
	 			length in [26..29.8];	
	 		}
	 		cWeight weight in [1.200..2];
	 	},
	 	Asus,
	 	Dell,
	 	HP,
	 	Medion,
	 	Sony
	 }
	 
}