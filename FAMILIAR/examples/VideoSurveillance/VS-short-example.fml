vsar = FM (VSApplicationRequirement: Scene Sort ; 
	  			     Scene:  LightingConditions; 
				     Sort: (Person|Vehicle)+ ;
				     LightingConditions: (Indoors|Outdoors) [LightingNoise] (ArtificialLight|NaturalLight) TimeOfDay ; 
				     TimeOfDay: (Night|Day) ; 
				     LightingNoise : (Flashes|Shadows|HeadLight) ; )

serialize vsar into featureide

setMandatory vsar.LightingNoise
removeFeature vsar.Shadows
setMandatory vsar.Outdoors
removeFeature vsar.Indoors
removeFeature vsar.Vehicle 
setMandatory vsar.Person
		

cleanup vsar
		

pcf = FM (VSPlatform: Segmentation Classification [LightingAnalyses]; 
		 Segmentation:  KernelFunction; 
		 KernelFunction : AColor KModel ; 
		 AColor : (Color|Grey) ;
		 KModel : (Edge|Region) ;
		 Classification : [Contour] [Density] [Model] ; 
		 Density : HighDensity ;
		 LightingAnalyses : [HeadLightDetect] ; 
		 Model : [Omega] Math ; 
		 Math : (ThreeD|Paral|Ellipse);
		 Edge -> !Density ;)

serialize pcf into SPLOT

prules = constraints ( LightingNoise -> (Edge and LightingAnalyses) ; (Flashes or HeadLight) -> Contour ; Person -> Omega ; )
		
		
glFM = aggregate { vsar pcf } withMapping prules
		
			
cleanup glFM
		
pcfp = extract glFM.VSPlatform
cleanup pcfp
		
