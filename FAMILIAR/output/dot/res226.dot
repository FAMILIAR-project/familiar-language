digraph G {
  priority_ThreeTwo;
  bundle_lcfs;
  thread_preemption;
  thread_instance;
  thread_lcfs;
  thread_strategy_replugging;
  priority_behaviour;
  idle_panic;
  separated;
  priority_Eight;
  priority_cooperative;
  size;
  multiple;
  bundle_strategy;
  0;
  thread_strategy;
  priority;
  1;
  bundle_strategy_replugging;
  thread_schedule;
  non_preemptable_threads;
  priority_count;
  dispach_method;
  thread;
  scheduler_lockable;
  single;
  bundle_fcfs;
  query_schedule;
  volatile_set;
  scheduling;
  schedule_same_priority;
  priority_OneSix;
  bundle_preemption;
  location;
  idle_user;
  bundle_schedule;
  dispatching;
  float_set;
  coroutine;
  idle_guard;
  thread_fcfs;
  idle_control;
  minimal_set;
  integrated;
  priority_preemptive;
  global_life;
  single -> thread_instance;
  size -> coroutine;
  scheduler_lockable -> thread_preemption;
  thread_schedule -> scheduling;
  priority_cooperative -> priority_behaviour;
  scheduling -> dispatching;
  thread_strategy -> thread_schedule;
  priority_count -> priority;
  priority_ThreeTwo -> priority_count;
  thread_preemption -> thread_schedule;
  idle_guard -> idle_control;
  dispatching -> coroutine;
  idle_control -> scheduling;
  bundle_strategy -> bundle_schedule;
  thread_instance -> thread;
  multiple -> thread_instance;
  volatile_set -> size;
  separated -> location;
  bundle_lcfs -> bundle_strategy;
  idle_panic -> idle_control;
  global_life -> dispach_method;
  bundle_schedule -> scheduling;
  query_schedule -> scheduling;
  minimal_set -> size;
  thread_lcfs -> thread_strategy;
  location -> coroutine;
  thread_strategy_replugging -> thread_strategy;
  non_preemptable_threads -> thread_preemption;
  bundle_fcfs -> bundle_strategy;
  thread_fcfs -> thread_strategy;
  priority_behaviour -> priority;
  bundle_strategy_replugging -> bundle_strategy;
  dispach_method -> dispatching;
  idle_user -> idle_control;
  float_set -> size;
  priority_OneSix -> priority_count;
  priority_preemptive -> priority_behaviour;
  priority -> thread_strategy;
  coroutine -> multiple;
  integrated -> location;
  schedule_same_priority -> priority;
  bundle_preemption -> bundle_schedule;
  thread -> 1;
  priority_Eight -> priority_count;
}
