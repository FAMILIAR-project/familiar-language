digraph G {
  Concrete;
  Graphical;
  Typing;
  Recursion;
  Automatic;
  Graphs;
  Phasing;
  Executable;
  Imperative;
  Looping;
  SourceTargetrelationship;
  Ruleorganization;
  Logic;
  Unidirectional;
  Internal;
  Implicit;
  Targetoriented;
  Selectedrules;
  Nondeterminism;
  Ruleselection;
  1;
  Concurrent;
  Complementarypairs;
  Form;
  Allrules;
  Ruleapplicationstrategy;
  Untyped;
  Textual;
  Reusemechanisms;
  External;
  Separate;
  Bidirectionalrules;
  Sourceoriented;
  Ruleapplicationscoping;
  Nondeterministic;
  Target;
  Deterministic;
  Modulatirymechanisms;
  Interactive;
  Nonexecutable;
  ModelTransformation;
  OrganizationalStructure;
  FixpointIteration;
  Destructive;
  Explicit;
  Terms;
  Strings;
  RuleIteration;
  Parameterization;
  Intermediatestructures;
  Syntax;
  Inheritance;
  Abstract;
  Existingtarget;
  Declarative;
  Bidirectional;
  Logicalcomposition;
  Explicitcondition;
  Control;
  0;
  LHS_RHS;
  Transformationrules;
  Variables;
  Syntacticallytyped;
  Bidirectionality;
  Model;
  Source;
  Inplace;
  Independent;
  Dedicatedsupport;
  Extensiononly;
  Manual;
  Onepoint;
  Patterns;
  Semanticallytyped;
  Directionality;
  Update;
  Newtarget;
  LHS_RHSSyntacticSeparation;
  Tracing;
  Storagelocation;
  Conflictresolution;
  Rulescheduling;
  Phasing -> Rulescheduling;
  Ruleorganization -> ModelTransformation;
  Deterministic -> Ruleapplicationstrategy;
  Storagelocation -> Dedicatedsupport;
  Nondeterminism -> Ruleselection;
  Parameterization -> Transformationrules;
  Selectedrules -> Automatic;
  Independent -> OrganizationalStructure;
  ModelTransformation -> 1;
  Model -> Storagelocation;
  Target -> Model;
  Bidirectionalrules -> Bidirectional;
  LHS_RHSSyntacticSeparation -> Transformationrules;
  Declarative -> Executable;
  Control -> Dedicatedsupport;
  Reusemechanisms -> Ruleorganization;
  Manual -> Control;
  Source -> Model;
  Semanticallytyped -> Variables;
  Syntax -> Patterns;
  Targetoriented -> OrganizationalStructure;
  Untyped -> Variables;
  Graphical -> Concrete;
  Concrete -> Syntax;
  Ruleapplicationstrategy -> ModelTransformation;
  Inplace -> Existingtarget;
  Variables -> LHS_RHS;
  Sourceoriented -> OrganizationalStructure;
  Separate -> Storagelocation;
  Complementarypairs -> Bidirectional;
  Inheritance -> Reusemechanisms;
  Concurrent -> Nondeterministic;
  Typing -> Patterns;
  OrganizationalStructure -> Ruleorganization;
  External -> Explicit;
  Intermediatestructures -> Transformationrules;
  Recursion -> RuleIteration;
  Automatic -> Control;
  Ruleapplicationscoping -> ModelTransformation;
  Bidirectionality -> Transformationrules;
  Executable -> Logic;
  Dedicatedsupport -> Tracing;
  Syntacticallytyped -> Variables;
  Newtarget -> SourceTargetrelationship;
  Logic -> LHS_RHS;
  Unidirectional -> Directionality;
  Looping -> RuleIteration;
  Semanticallytyped -> Typing;
  FixpointIteration -> RuleIteration;
  Graphs -> Form;
  Target -> Ruleapplicationscoping;
  Form -> Patterns;
  Bidirectional -> Directionality;
  Imperative -> Executable;
  Rulescheduling -> ModelTransformation;
  Update -> Existingtarget;
  Interactive -> Ruleselection;
  Directionality -> ModelTransformation;
  LHS_RHS -> Transformationrules;
  Allrules -> Automatic;
  Existingtarget -> SourceTargetrelationship;
  Form -> Rulescheduling;
  Patterns -> LHS_RHS;
  Tracing -> ModelTransformation;
  Interactive -> Ruleapplicationstrategy;
  Explicitcondition -> Ruleselection;
  Modulatirymechanisms -> Ruleorganization;
  Source -> Ruleapplicationscoping;
  Implicit -> Form;
  Nondeterministic -> Ruleapplicationstrategy;
  Conflictresolution -> Ruleselection;
  Onepoint -> Nondeterministic;
  Strings -> Form;
  Explicit -> Form;
  Destructive -> Update;
  Nonexecutable -> Logic;
  Ruleselection -> Rulescheduling;
  Untyped -> Typing;
  Terms -> Form;
  Transformationrules -> ModelTransformation;
  SourceTargetrelationship -> ModelTransformation;
  Abstract -> Syntax;
  RuleIteration -> Rulescheduling;
  Textual -> Concrete;
  Internal -> Explicit;
  Extensiononly -> Update;
  Logicalcomposition -> Reusemechanisms;
  Syntacticallytyped -> Typing;
}
