digraph G {
  Untyped_Zero;
  Concrete;
  Graphical;
  Typing;
  Recursion;
  Automatic;
  Graphs;
  Syntacticallytyped_Zero;
  Phasing;
  Executable;
  Imperative;
  Looping;
  SourceTargetrelationship;
  Ruleorganization;
  Logic;
  Unidirectional;
  Source_Zero;
  Internal;
  Implicit;
  Targetoriented;
  Selectedrules;
  Nondeterminism;
  Ruleselection;
  1;
  Form_Zero;
  Concurrent;
  Complementarypairs;
  Form;
  Allrules;
  Ruleapplicationstrategy;
  Untyped;
  Textual;
  Reusemechanisms;
  External;
  Separate;
  Bidirectionalrules;
  Sourceoriented;
  Ruleapplicationscoping;
  Semanticallytyped_Zero;
  Nondeterministic;
  Target;
  Deterministic;
  Modulatirymechanisms;
  Interactive;
  Nonexecutable;
  ModelTransformation;
  OrganizationalStructure;
  FixpointIteration;
  Explicit;
  Destructive;
  Terms;
  Strings;
  RuleIteration;
  Interactive_Zero;
  Parameterization;
  Intermediatestructures;
  Syntax;
  Inheritance;
  Abstract;
  Existingtarget;
  Declarative;
  Bidirectional;
  Logicalcomposition;
  Explicitcondition;
  Control;
  0;
  LHS_RHS;
  Transformationrules;
  Variables;
  Syntacticallytyped;
  Bidirectionality;
  Model;
  Source;
  Inplace;
  Independent;
  Dedicatedsupport;
  Extensiononly;
  Target_Zero;
  Manual;
  Onepoint;
  Patterns;
  Semanticallytyped;
  Directionality;
  Update;
  Newtarget;
  LHS_RHSSyntacticSeparation;
  Tracing;
  Storagelocation;
  Conflictresolution;
  Rulescheduling;
  Onepoint -> Nondeterministic;
  Declarative -> Executable;
  Nonexecutable -> Logic;
  Parameterization -> Transformationrules;
  Target_Zero -> Ruleapplicationscoping;
  Ruleselection -> Rulescheduling;
  Internal -> Explicit;
  Explicitcondition -> Ruleselection;
  Phasing -> Rulescheduling;
  Existingtarget -> SourceTargetrelationship;
  External -> Explicit;
  Modulatirymechanisms -> Ruleorganization;
  Looping -> RuleIteration;
  Graphs -> Form;
  Syntacticallytyped -> Typing;
  Targetoriented -> OrganizationalStructure;
  Explicit -> Form;
  Model -> Storagelocation;
  Variables -> LHS_RHS;
  Tracing -> ModelTransformation;
  Extensiononly -> Update;
  Selectedrules -> Automatic;
  Form_Zero -> Patterns;
  Semanticallytyped -> Typing;
  Concurrent -> Nondeterministic;
  Logic -> LHS_RHS;
  Strings -> Form;
  Destructive -> Update;
  Ruleorganization -> ModelTransformation;
  Interactive -> Ruleselection;
  Interactive_Zero -> Ruleapplicationstrategy;
  Separate -> Storagelocation;
  Directionality -> ModelTransformation;
  LHS_RHSSyntacticSeparation -> Transformationrules;
  Conflictresolution -> Ruleselection;
  Inplace -> Existingtarget;
  Source_Zero -> Ruleapplicationscoping;
  RuleIteration -> Rulescheduling;
  Recursion -> RuleIteration;
  Independent -> OrganizationalStructure;
  Abstract -> Syntax;
  Storagelocation -> Dedicatedsupport;
  ModelTransformation -> 1;
  Newtarget -> SourceTargetrelationship;
  Patterns -> LHS_RHS;
  Allrules -> Automatic;
  Nondeterminism -> Ruleselection;
  Automatic -> Control;
  Semanticallytyped_Zero -> Variables;
  Source -> Model;
  Unidirectional -> Directionality;
  Syntacticallytyped_Zero -> Variables;
  Deterministic -> Ruleapplicationstrategy;
  Nondeterministic -> Ruleapplicationstrategy;
  Textual -> Concrete;
  Syntax -> Patterns;
  Terms -> Form;
  FixpointIteration -> RuleIteration;
  Bidirectionalrules -> Bidirectional;
  Concrete -> Syntax;
  Untyped -> Typing;
  Manual -> Control;
  OrganizationalStructure -> Ruleorganization;
  Intermediatestructures -> Transformationrules;
  Form -> Rulescheduling;
  Executable -> Logic;
  Target -> Model;
  Dedicatedsupport -> Tracing;
  Transformationrules -> ModelTransformation;
  Graphical -> Concrete;
  Reusemechanisms -> Ruleorganization;
  Implicit -> Form;
  Ruleapplicationscoping -> ModelTransformation;
  SourceTargetrelationship -> ModelTransformation;
  Typing -> Patterns;
  Ruleapplicationstrategy -> ModelTransformation;
  Inheritance -> Reusemechanisms;
  Logicalcomposition -> Reusemechanisms;
  Rulescheduling -> ModelTransformation;
  Update -> Existingtarget;
  Bidirectionality -> Transformationrules;
  Complementarypairs -> Bidirectional;
  LHS_RHS -> Transformationrules;
  Untyped_Zero -> Variables;
  Control -> Dedicatedsupport;
  Sourceoriented -> OrganizationalStructure;
  Bidirectional -> Directionality;
  Imperative -> Executable;
  Untyped_Zero -> LHS_RHS;
  Concrete -> Patterns;
  Graphical -> Syntax;
  Graphical -> Patterns;
  Typing -> LHS_RHS;
  Recursion -> Rulescheduling;
  Automatic -> Dedicatedsupport;
  Graphs -> Rulescheduling;
  Syntacticallytyped_Zero -> LHS_RHS;
  Phasing -> ModelTransformation;
  Executable -> LHS_RHS;
  Imperative -> Logic;
  Imperative -> LHS_RHS;
  Looping -> Rulescheduling;
  SourceTargetrelationship -> 1;
  Ruleorganization -> 1;
  Logic -> Transformationrules;
  Unidirectional -> ModelTransformation;
  Source_Zero -> ModelTransformation;
  Internal -> Form;
  Implicit -> Rulescheduling;
  Targetoriented -> Ruleorganization;
  Selectedrules -> Control;
  Selectedrules -> Dedicatedsupport;
  Nondeterminism -> Rulescheduling;
  Ruleselection -> ModelTransformation;
  Form_Zero -> LHS_RHS;
  Concurrent -> Ruleapplicationstrategy;
  Complementarypairs -> Directionality;
  Form -> ModelTransformation;
  Allrules -> Control;
  Allrules -> Dedicatedsupport;
  Ruleapplicationstrategy -> 1;
  Untyped -> LHS_RHS;
  Untyped -> Patterns;
  Textual -> Syntax;
  Textual -> Patterns;
  Reusemechanisms -> 1;
  Reusemechanisms -> ModelTransformation;
  External -> Form;
  Separate -> Dedicatedsupport;
  Bidirectionalrules -> Directionality;
  Sourceoriented -> Ruleorganization;
  Ruleapplicationscoping -> 1;
  Semanticallytyped_Zero -> LHS_RHS;
  Nondeterministic -> 1;
  Nondeterministic -> ModelTransformation;
  Target -> Storagelocation;
  Deterministic -> 1;
  Deterministic -> ModelTransformation;
  Modulatirymechanisms -> 1;
  Modulatirymechanisms -> ModelTransformation;
  Interactive -> Rulescheduling;
  Interactive -> ModelTransformation;
  Nonexecutable -> LHS_RHS;
  Nonexecutable -> Transformationrules;
  OrganizationalStructure -> 1;
  OrganizationalStructure -> ModelTransformation;
  FixpointIteration -> Rulescheduling;
  Explicit -> Rulescheduling;
  Explicit -> ModelTransformation;
  Destructive -> Existingtarget;
  Terms -> Rulescheduling;
  Terms -> ModelTransformation;
  Strings -> Rulescheduling;
  Strings -> ModelTransformation;
  RuleIteration -> ModelTransformation;
  Interactive_Zero -> 1;
  Interactive_Zero -> ModelTransformation;
  Parameterization -> ModelTransformation;
  Intermediatestructures -> ModelTransformation;
  Syntax -> LHS_RHS;
  Inheritance -> Ruleorganization;
  Inheritance -> 1;
  Inheritance -> ModelTransformation;
  Abstract -> LHS_RHS;
  Abstract -> Patterns;
  Existingtarget -> 1;
  Existingtarget -> ModelTransformation;
  Declarative -> Logic;
  Declarative -> LHS_RHS;
  Bidirectional -> ModelTransformation;
  Logicalcomposition -> Ruleorganization;
  Logicalcomposition -> 1;
  Logicalcomposition -> ModelTransformation;
  Explicitcondition -> Rulescheduling;
  Explicitcondition -> ModelTransformation;
  Control -> Tracing;
  LHS_RHS -> ModelTransformation;
  Transformationrules -> 1;
  Variables -> ModelTransformation;
  Variables -> Transformationrules;
  Syntacticallytyped -> LHS_RHS;
  Syntacticallytyped -> Patterns;
  Bidirectionality -> 1;
  Bidirectionality -> ModelTransformation;
  Model -> Dedicatedsupport;
  Source -> Storagelocation;
  Source -> Dedicatedsupport;
  Inplace -> SourceTargetrelationship;
  Inplace -> 1;
  Inplace -> ModelTransformation;
  Independent -> Ruleorganization;
  Independent -> 1;
  Independent -> ModelTransformation;
  Dedicatedsupport -> ModelTransformation;
  Extensiononly -> Existingtarget;
  Target_Zero -> 1;
  Target_Zero -> ModelTransformation;
  Manual -> Tracing;
  Manual -> Dedicatedsupport;
  Onepoint -> Ruleapplicationstrategy;
  Onepoint -> 1;
  Onepoint -> ModelTransformation;
  Patterns -> ModelTransformation;
  Patterns -> Transformationrules;
  Semanticallytyped -> LHS_RHS;
  Semanticallytyped -> Patterns;
  Directionality -> 1;
  Update -> SourceTargetrelationship;
  Update -> 1;
  Update -> ModelTransformation;
  Newtarget -> 1;
  Newtarget -> ModelTransformation;
  LHS_RHSSyntacticSeparation -> 1;
  LHS_RHSSyntacticSeparation -> ModelTransformation;
  Tracing -> 1;
  Storagelocation -> Tracing;
  Storagelocation -> ModelTransformation;
  Conflictresolution -> Rulescheduling;
  Conflictresolution -> ModelTransformation;
  Rulescheduling -> 1;
  Untyped_Zero -> Transformationrules;
  Untyped_Zero -> ModelTransformation;
  Concrete -> LHS_RHS;
  Concrete -> Transformationrules;
  Concrete -> ModelTransformation;
  Graphical -> LHS_RHS;
  Graphical -> ModelTransformation;
  Graphical -> Transformationrules;
  Typing -> Transformationrules;
  Typing -> ModelTransformation;
  Recursion -> 1;
  Recursion -> ModelTransformation;
  Automatic -> Tracing;
  Automatic -> ModelTransformation;
  Graphs -> 1;
  Graphs -> ModelTransformation;
  Syntacticallytyped_Zero -> Transformationrules;
  Syntacticallytyped_Zero -> ModelTransformation;
  Phasing -> 1;
  Executable -> ModelTransformation;
  Executable -> Transformationrules;
  Imperative -> Transformationrules;
  Imperative -> ModelTransformation;
  Looping -> 1;
  Looping -> ModelTransformation;
  Logic -> 1;
  Logic -> ModelTransformation;
  Unidirectional -> 1;
  Source_Zero -> 1;
  Internal -> Rulescheduling;
  Internal -> ModelTransformation;
  Implicit -> 1;
  Implicit -> ModelTransformation;
  Targetoriented -> 1;
  Targetoriented -> ModelTransformation;
  Selectedrules -> Tracing;
  Selectedrules -> ModelTransformation;
  Nondeterminism -> 1;
  Nondeterminism -> ModelTransformation;
  Ruleselection -> 1;
  Form_Zero -> Transformationrules;
  Form_Zero -> ModelTransformation;
  Concurrent -> 1;
  Concurrent -> ModelTransformation;
  Complementarypairs -> 1;
  Complementarypairs -> ModelTransformation;
  Form -> 1;
  Allrules -> Tracing;
  Allrules -> ModelTransformation;
  Untyped -> ModelTransformation;
  Untyped -> Transformationrules;
  Textual -> LHS_RHS;
  Textual -> ModelTransformation;
  Textual -> Transformationrules;
  External -> Rulescheduling;
  External -> 1;
  External -> ModelTransformation;
  Separate -> Tracing;
  Separate -> ModelTransformation;
  Bidirectionalrules -> 1;
  Bidirectionalrules -> ModelTransformation;
  Sourceoriented -> 1;
  Sourceoriented -> ModelTransformation;
  Semanticallytyped_Zero -> Transformationrules;
  Semanticallytyped_Zero -> ModelTransformation;
  Target -> Tracing;
  Target -> Dedicatedsupport;
  Target -> ModelTransformation;
  Interactive -> 1;
  Nonexecutable -> 1;
  Nonexecutable -> ModelTransformation;
  FixpointIteration -> 1;
  FixpointIteration -> ModelTransformation;
  Explicit -> 1;
  Destructive -> SourceTargetrelationship;
  Destructive -> 1;
  Destructive -> ModelTransformation;
  Terms -> 1;
  Strings -> 1;
  RuleIteration -> 1;
  Parameterization -> 1;
  Intermediatestructures -> 1;
  Syntax -> Transformationrules;
  Syntax -> ModelTransformation;
  Abstract -> ModelTransformation;
  Abstract -> Transformationrules;
  Declarative -> 1;
  Declarative -> Transformationrules;
  Declarative -> ModelTransformation;
  Bidirectional -> 1;
  Explicitcondition -> 1;
  Control -> 1;
  Control -> ModelTransformation;
  LHS_RHS -> 1;
  Variables -> 1;
  Syntacticallytyped -> 1;
  Syntacticallytyped -> ModelTransformation;
  Syntacticallytyped -> Transformationrules;
  Model -> Tracing;
  Model -> ModelTransformation;
  Source -> Tracing;
  Source -> ModelTransformation;
  Dedicatedsupport -> 1;
  Extensiononly -> SourceTargetrelationship;
  Extensiononly -> 1;
  Extensiononly -> ModelTransformation;
  Manual -> 1;
  Manual -> ModelTransformation;
  Patterns -> 1;
  Semanticallytyped -> 1;
  Semanticallytyped -> ModelTransformation;
  Semanticallytyped -> Transformationrules;
  Storagelocation -> 1;
  Conflictresolution -> 1;
  Untyped_Zero -> 1;
  Concrete -> 1;
  Graphical -> 1;
  Typing -> 1;
  Automatic -> 1;
  Syntacticallytyped_Zero -> 1;
  Executable -> 1;
  Imperative -> 1;
  Internal -> 1;
  Selectedrules -> 1;
  Form_Zero -> 1;
  Allrules -> 1;
  Untyped -> 1;
  Textual -> 1;
  Separate -> 1;
  Semanticallytyped_Zero -> 1;
  Target -> 1;
  Syntax -> 1;
  Abstract -> 1;
  Model -> 1;
  Source -> 1;
}
