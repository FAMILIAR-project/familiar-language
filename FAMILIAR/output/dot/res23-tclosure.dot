digraph G {
  CAN;
  Polling;
  Push;
  Nonblocking;
  Paradigm;
  MessageBased;
  Pull;
  Sender;
  NonQueued;
  Client_Server;
  Technology;
  Synchronous;
  Local;
  Connector;
  Blocking;
  Receiver;
  Queued;
  Asynchronous;
  0;
  1;
  Callback;
  Timeout;
  Technology -> Connector;
  Connector -> 1;
  Receiver -> MessageBased;
  MessageBased -> Paradigm;
  Polling -> Asynchronous;
  Nonblocking -> Polling;
  Client_Server -> Paradigm;
  CAN -> Technology;
  Synchronous -> Client_Server;
  NonQueued -> Pull;
  Local -> Technology;
  Timeout -> Synchronous;
  Callback -> Asynchronous;
  Asynchronous -> Client_Server;
  Paradigm -> Connector;
  Pull -> Receiver;
  Blocking -> Polling;
  Sender -> MessageBased;
  Queued -> Pull;
  Push -> Receiver;
  CAN -> Connector;
  Polling -> Client_Server;
  Push -> MessageBased;
  Nonblocking -> Client_Server;
  Nonblocking -> Asynchronous;
  Paradigm -> 1;
  MessageBased -> Connector;
  MessageBased -> 1;
  Pull -> MessageBased;
  Sender -> Connector;
  Sender -> Paradigm;
  Sender -> 1;
  NonQueued -> MessageBased;
  NonQueued -> Receiver;
  Client_Server -> Connector;
  Client_Server -> 1;
  Technology -> 1;
  Synchronous -> Connector;
  Synchronous -> Paradigm;
  Synchronous -> 1;
  Local -> Connector;
  Local -> 1;
  Blocking -> Client_Server;
  Blocking -> Asynchronous;
  Receiver -> Connector;
  Receiver -> Paradigm;
  Receiver -> 1;
  Queued -> MessageBased;
  Queued -> Receiver;
  Asynchronous -> Connector;
  Asynchronous -> Paradigm;
  Asynchronous -> 1;
  Callback -> Connector;
  Callback -> Paradigm;
  Callback -> Client_Server;
  Callback -> 1;
  Timeout -> Connector;
  Timeout -> Paradigm;
  Timeout -> Client_Server;
  Timeout -> 1;
  CAN -> 1;
  Polling -> Connector;
  Polling -> Paradigm;
  Polling -> 1;
  Push -> Connector;
  Push -> Paradigm;
  Push -> 1;
  Nonblocking -> Connector;
  Nonblocking -> Paradigm;
  Nonblocking -> 1;
  Pull -> Connector;
  Pull -> Paradigm;
  Pull -> 1;
  NonQueued -> Connector;
  NonQueued -> Paradigm;
  NonQueued -> 1;
  Blocking -> Connector;
  Blocking -> Paradigm;
  Blocking -> 1;
  Queued -> Connector;
  Queued -> Paradigm;
  Queued -> 1;
}
