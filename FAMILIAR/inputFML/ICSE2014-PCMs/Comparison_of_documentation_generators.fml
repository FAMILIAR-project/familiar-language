Comparison_of_documentation_generators: "Language support" "Operating system support" "Output formats" "Other features" "General information" "Input formats" ; 
"Language support": ("PL/SQL"|Haskell|"C shell")? [IDL] [ActionScript] ["VB / VBScript"] ["Bourne shell"] [Perl] [Ruby] [Access] [Java] [Python] ["C#"] [JavaScript] [AppleScript] ["C/C++"] [Fortran] ["Delphi / Pascal"] [".NET1"] [MIG] [PHP] [D] ["Any With Comments3"] [Tcl] [Ada] ; 
"Operating system support": [BSD] [Windows] [Unix] ["Mac OS X"] [Linux] ; 
"Output formats": ["man pages"] [CHM] [LaTeX] [PostScript] [DocBook] [PDF] [XML] HTML [RTF] ; 
"Other features": ["generated diagrams"] ["highlighting and linking of generated doc"] ["parameter types extracted"] ["possibility of extended customization"] ; 
"General information": "Software license" ; 
"Input formats": [Binary] [Text] ; 
"generated diagrams": ("ASCII diagramming and picture importing."|"linked graphical object relationship diagrams"|"class diagrams with extra tool"|"File dependencies, inheritance, control flow, data flow, variable access, class instantiation, data declaration, Form.Show order, procedure calls, project dependencies, file belongs to project, class cohesion."|"caller and callee graphs, dependency graphs, inheritance diagrams, collaboration diagrams"|"class / interface inheritance"|"'as-is' in comments"|"linked hierarchy and dependency graphs for function calls, variable sets and reads, class inheritance and interface, and file includes and interface, intra-function flow charts"|"class inheritance diagrams"|"linked graphical class diagrams, class inheritance tree"|"Pie Charts for code statistics, object relationship diagrams (dependency graphs)"|"local, module and global graphical class hierarchies, local text class hierarchies") ; 
"highlighting and linking of generated doc": ("internal classes/modules cross-referenced and Ruby source highlighted"|"Looks and reads just like code with syntax coloring in Visual Studio style."|"internal links and links to .NET framework documentation"|"fully cross linked project wide, including all hierarchy and dependency graphs, metrics tables, source code snippets, and source files"|"cross reference to generated documentation, and to php.net function reference"|"All SQL code syntax highlighted"|"cross reference to generated documentation"|"internal links between routines and objects"|"fully cross linked project wide, automatic inter-project links, automatic links into framework documentation like MSDN, Borland/CodeGear Help"|"Table of Contents, Index, and per-page cross referencing."|"Configurable syntax highlighting/coloring with automatic linking to symbols in declaration, ability to manual link to symbols in discussion, etc."|"Cross-referenced source code")? ; 
"parameter types extracted": ("full semantic analysis of source code, including parameter types, condition compilation directives, macro expansions"|"types extracted and linked, source code level linkage"|"all coded comments"|"data types extracted and linked"|"Method/Function parameters extracted and linked."|"types extracted and linked"|"Supports linking from all member and method parameter types.")? ; 
"possibility of extended customization": ("Customizable Latte-based templates"|"full customization for all output formats using XSL templates and a built-in designer"|"customizable Ruby templates"|"20 CSS styles. Well documented CSS facilitates customization."|"full customization for all output formats, template for MSDN and other lookalike output, custom XMLDoc/JavaDoc tags"|"Customisable for all type of comments"|"with XSLT"|"Smarty-based templates"|"full customization for all output formats, templates for MSDN-like output, custom XML comment tags"|"Custom headers, footers, code coloring, and other CSS styles in individual pages. Project-wide TOC is generated from a user-defined template."|"customizable through style sheets and CSS"|"With XSLT"|"customizable HTML based templates, custom comment tags"|"with macros"|"Extend the generator classes through Perl programming."|"custom CSS")? ; 
"Software license": (GPL|"Ruby License"|Proprietary|"Ms-PL"|"MSDN Code Gallery Licenses"|LGPL|Omnilicense|"New BSD / GPL v2 / GPL v3"|"Free Education / Proprietary"|"Freeware4"|EUPL|"Artistic, GPL"|APSL|"MIT License"|"Freeware / GPL")? ; 
(".NET1" -> !"C shell");
(Ada -> !AppleScript);
"Software license";
("C#" -> !AppleScript);
(Access -> !Haskell);
(Haskell -> !Perl);
(MIG -> !Ada);
("VB / VBScript" -> !AppleScript);
(D -> !"Bourne shell");
(D -> !MIG);
(D -> !AppleScript);
(Fortran -> !"Bourne shell");
("VB / VBScript" -> !Haskell);
(Haskell -> !Ada);
("C#" -> !"C shell");
(Ada -> !"Bourne shell");
("PL/SQL" -> !AppleScript);
(Access -> !"C shell");
(Ruby -> !Haskell);
(Haskell -> !"C#");
(D -> !"C shell");
("PL/SQL" -> !"Bourne shell");
(Ruby -> !Access);
(ActionScript -> !"Bourne shell");
(Access -> !AppleScript);
(Haskell -> !"C/C++");
(".NET1" -> !"Bourne shell");
(Haskell -> !D);
(MIG -> !"C#");
(Haskell -> !AppleScript);
(Haskell -> !".NET1");
(Haskell -> !Python);
("PL/SQL" -> !MIG);
(Access -> !"Bourne shell");
("Any With Comments3" -> !"Bourne shell");
(Haskell -> !"Any With Comments3");
(Fortran -> !MIG);
(ActionScript -> !MIG);
("Any With Comments3" -> !AppleScript);
(Ada -> !"C shell");
(Access -> !D);
(ActionScript -> !Haskell);
("VB / VBScript" -> !"Bourne shell");
(Haskell -> !JavaScript);
("Any With Comments3" -> !"C shell");
(IDL -> !Haskell);
(Access -> !MIG);
("VB / VBScript" -> !MIG);
(MIG -> !"Any With Comments3");
(Fortran -> !"C shell");
(Fortran -> !Haskell);
(Fortran -> !AppleScript);
(Haskell -> !Java);
(ActionScript -> !"C shell");
(ActionScript -> !AppleScript);
(Haskell -> !"Bourne shell");
("VB / VBScript" -> !"C shell");
(".NET1" -> !MIG);
(Haskell -> !Tcl);
("C#" -> !"Bourne shell");
(Access -> !Tcl);
("Delphi / Pascal" -> !Haskell);
(Haskell -> !MIG);
(".NET1" -> !AppleScript);
(Haskell -> !PHP);