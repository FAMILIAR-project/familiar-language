/*
* generated by Xtext
*/
package org.xtext.example.mydsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.example.mydsl.services.FMLGrammarAccess;

public class FMLParser extends AbstractContentAssistParser {
	
	@Inject
	private FMLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalFMLParser createParser() {
		org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalFMLParser result = new org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalFMLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getFamiliarScriptAccess().getExportsAlternatives_2_0(), "rule__FamiliarScript__ExportsAlternatives_2_0");
					put(grammarAccess.getScriptCommandAccess().getAlternatives(), "rule__ScriptCommand__Alternatives");
					put(grammarAccess.getComplexCommandAccess().getAlternatives(), "rule__ComplexCommand__Alternatives");
					put(grammarAccess.getComplexCommandAccess().getAlternatives_0_1(), "rule__ComplexCommand__Alternatives_0_1");
					put(grammarAccess.getComplexCommandAccess().getOpAlternatives_0_1_0_1_0(), "rule__ComplexCommand__OpAlternatives_0_1_0_1_0");
					put(grammarAccess.getCommandAccess().getAlternatives(), "rule__Command__Alternatives");
					put(grammarAccess.getCommandAccess().getAlternatives_1(), "rule__Command__Alternatives_1");
					put(grammarAccess.getBooleanExprAccess().getValAlternatives_1_0(), "rule__BooleanExpr__ValAlternatives_1_0");
					put(grammarAccess.getConstraintExprAccess().getAlternatives_1(), "rule__ConstraintExpr__Alternatives_1");
					put(grammarAccess.getLTypeAccess().getValAlternatives_0(), "rule__LType__ValAlternatives_0");
					put(grammarAccess.getFMLAbstractCommandAccess().getAlternatives(), "rule__FMLAbstractCommand__Alternatives");
					put(grammarAccess.getFMCommandAccess().getAlternatives(), "rule__FMCommand__Alternatives");
					put(grammarAccess.getFTCommandAccess().getAlternatives(), "rule__FTCommand__Alternatives");
					put(grammarAccess.getBCommandAccess().getAlternatives(), "rule__BCommand__Alternatives");
					put(grammarAccess.getStrCommandAccess().getAlternatives(), "rule__StrCommand__Alternatives");
					put(grammarAccess.getConfigurationCommandAccess().getAlternatives(), "rule__ConfigurationCommand__Alternatives");
					put(grammarAccess.getSetCommandAccess().getAlternatives(), "rule__SetCommand__Alternatives");
					put(grammarAccess.getConstraintCommandAccess().getAlternatives(), "rule__ConstraintCommand__Alternatives");
					put(grammarAccess.getIntegerCommandAccess().getAlternatives(), "rule__IntegerCommand__Alternatives");
					put(grammarAccess.getVariabilityOpCommandAccess().getAlternatives(), "rule__VariabilityOpCommand__Alternatives");
					put(grammarAccess.getAnalysisOperationAccess().getOpAlternatives_0_0(), "rule__AnalysisOperation__OpAlternatives_0_0");
					put(grammarAccess.getAnalysisOperationAccess().getFmAlternatives_1_0(), "rule__AnalysisOperation__FmAlternatives_1_0");
					put(grammarAccess.getSetOperationsAccess().getAlternatives(), "rule__SetOperations__Alternatives");
					put(grammarAccess.getSetUnionOrIntersectionAccess().getOpAlternatives_0_0(), "rule__SetUnionOrIntersection__OpAlternatives_0_0");
					put(grammarAccess.getSetAddOrRemoveAccess().getOpAlternatives_0_0(), "rule__SetAddOrRemove__OpAlternatives_0_0");
					put(grammarAccess.getFeatureOperationAccess().getOpAlternatives_0_0(), "rule__FeatureOperation__OpAlternatives_0_0");
					put(grammarAccess.getStringOperationAccess().getAlternatives(), "rule__StringOperation__Alternatives");
					put(grammarAccess.getLoadGenericAccess().getStreamAlternatives_1_0(), "rule__LoadGeneric__StreamAlternatives_1_0");
					put(grammarAccess.getMergeAccess().getAlternatives_4(), "rule__Merge__Alternatives_4");
					put(grammarAccess.getAggregateMergeAccess().getAlternatives_3(), "rule__AggregateMerge__Alternatives_3");
					put(grammarAccess.getHierarchySpecificationAccess().getAlternatives_1(), "rule__HierarchySpecification__Alternatives_1");
					put(grammarAccess.getGroupSpecAccess().getAlternatives(), "rule__GroupSpec__Alternatives");
					put(grammarAccess.getAggregateAccess().getAlternatives_2(), "rule__Aggregate__Alternatives_2");
					put(grammarAccess.getFeatureModelOperationAccess().getAlternatives(), "rule__FeatureModelOperation__Alternatives");
					put(grammarAccess.getEditOperationAccess().getAlternatives(), "rule__EditOperation__Alternatives");
					put(grammarAccess.getConfigurationCmdAccess().getAlternatives(), "rule__ConfigurationCmd__Alternatives");
					put(grammarAccess.getSelectionFeatureAccess().getOpAlternatives_0_0(), "rule__SelectionFeature__OpAlternatives_0_0");
					put(grammarAccess.getFeatureExpressionAccess().getAlternatives(), "rule__FeatureExpression__Alternatives");
					put(grammarAccess.getFullMandatorysAccess().getAlternatives_0(), "rule__FullMandatorys__Alternatives_0");
					put(grammarAccess.getScriptDefinitionAccess().getExportsAlternatives_3_0(), "rule__ScriptDefinition__ExportsAlternatives_3_0");
					put(grammarAccess.getShellAccess().getCmdAlternatives_0(), "rule__Shell__CmdAlternatives_0");
					put(grammarAccess.getExitAccess().getValAlternatives_0(), "rule__Exit__ValAlternatives_0");
					put(grammarAccess.getListingAccess().getValAlternatives_0_0(), "rule__Listing__ValAlternatives_0_0");
					put(grammarAccess.getStateAccess().getValAlternatives_0(), "rule__State__ValAlternatives_0");
					put(grammarAccess.getCopyVariableAccess().getAlternatives_0(), "rule__CopyVariable__Alternatives_0");
					put(grammarAccess.getRemoveVariableAccess().getAlternatives_0(), "rule__RemoveVariable__Alternatives_0");
					put(grammarAccess.getFMLSaveAccess().getAlternatives_0(), "rule__FMLSave__Alternatives_0");
					put(grammarAccess.getPrinterUtilityAccess().getOpAlternatives_0_0(), "rule__PrinterUtility__OpAlternatives_0_0");
					put(grammarAccess.getGDisplayAccess().getVarAlternatives_1_0(), "rule__GDisplay__VarAlternatives_1_0");
					put(grammarAccess.getGListingAccess().getAlternatives(), "rule__GListing__Alternatives");
					put(grammarAccess.getModifyVOperatorAccess().getAlternatives(), "rule__ModifyVOperator__Alternatives");
					put(grammarAccess.getUnary_exprAccess().getAlternatives(), "rule__Unary_expr__Alternatives");
					put(grammarAccess.getPrimary_exprAccess().getAlternatives(), "rule__Primary_expr__Alternatives");
					put(grammarAccess.getPrimary_exprAccess().getNameAlternatives_0_0(), "rule__Primary_expr__NameAlternatives_0_0");
					put(grammarAccess.getFeatureModelAccess().getAlternatives_0(), "rule__FeatureModel__Alternatives_0");
					put(grammarAccess.getFeatureModelAccess().getAlternatives_2(), "rule__FeatureModel__Alternatives_2");
					put(grammarAccess.getFeatureModelAccess().getAlternatives_2_0(), "rule__FeatureModel__Alternatives_2_0");
					put(grammarAccess.getChildAccess().getAlternatives(), "rule__Child__Alternatives");
					put(grammarAccess.getFT_IDAccess().getAlternatives(), "rule__FT_ID__Alternatives");
					put(grammarAccess.getFML_IDENTIFIERAccess().getAlternatives(), "rule__FML_IDENTIFIER__Alternatives");
					put(grammarAccess.getFML_IDENTIFIERAccess().getAlternatives_0_0(), "rule__FML_IDENTIFIER__Alternatives_0_0");
					put(grammarAccess.getFML_IDENTIFIERAccess().getAlternatives_0_1_1(), "rule__FML_IDENTIFIER__Alternatives_0_1_1");
					put(grammarAccess.getEditConstantAccess().getAlternatives(), "rule__EditConstant__Alternatives");
					put(grammarAccess.getFeatureEdgeKindAccess().getAlternatives(), "rule__FeatureEdgeKind__Alternatives");
					put(grammarAccess.getKindOfGetAccess().getAlternatives(), "rule__KindOfGet__Alternatives");
					put(grammarAccess.getKindOfComputeAccess().getAlternatives(), "rule__KindOfCompute__Alternatives");
					put(grammarAccess.getKindOfGetGroupsAccess().getAlternatives(), "rule__KindOfGetGroups__Alternatives");
					put(grammarAccess.getKindOfComputeGroupsAccess().getAlternatives(), "rule__KindOfComputeGroups__Alternatives");
					put(grammarAccess.getBDDBackendAccess().getAlternatives(), "rule__BDDBackend__Alternatives");
					put(grammarAccess.getMergeModeAccess().getAlternatives(), "rule__MergeMode__Alternatives");
					put(grammarAccess.getHierarchyStrategyAccess().getAlternatives(), "rule__HierarchyStrategy__Alternatives");
					put(grammarAccess.getSliceModeAccess().getAlternatives(), "rule__SliceMode__Alternatives");
					put(grammarAccess.getComparisonOperatorAccess().getAlternatives(), "rule__ComparisonOperator__Alternatives");
					put(grammarAccess.getSetOperatorAccess().getAlternatives(), "rule__SetOperator__Alternatives");
					put(grammarAccess.getOpSelectionAccess().getAlternatives(), "rule__OpSelection__Alternatives");
					put(grammarAccess.getAutoConfModeAccess().getAlternatives(), "rule__AutoConfMode__Alternatives");
					put(grammarAccess.getOPT_LISTINGAccess().getAlternatives(), "rule__OPT_LISTING__Alternatives");
					put(grammarAccess.getFMFormatAccess().getAlternatives(), "rule__FMFormat__Alternatives");
					put(grammarAccess.getBOOL_OperatorAccess().getAlternatives(), "rule__BOOL_Operator__Alternatives");
					put(grammarAccess.getFamiliarScriptAccess().getGroup(), "rule__FamiliarScript__Group__0");
					put(grammarAccess.getScriptCommandAccess().getGroup_0(), "rule__ScriptCommand__Group_0__0");
					put(grammarAccess.getScriptCommandAccess().getGroup_0_1(), "rule__ScriptCommand__Group_0_1__0");
					put(grammarAccess.getComplexCommandAccess().getGroup_0(), "rule__ComplexCommand__Group_0__0");
					put(grammarAccess.getComplexCommandAccess().getGroup_0_1_0(), "rule__ComplexCommand__Group_0_1_0__0");
					put(grammarAccess.getComplexCommandAccess().getGroup_0_1_1(), "rule__ComplexCommand__Group_0_1_1__0");
					put(grammarAccess.getComplexCommandAccess().getGroup_0_1_2(), "rule__ComplexCommand__Group_0_1_2__0");
					put(grammarAccess.getComplexCommandAccess().getGroup_0_1_3(), "rule__ComplexCommand__Group_0_1_3__0");
					put(grammarAccess.getComplexCommandAccess().getGroup_1(), "rule__ComplexCommand__Group_1__0");
					put(grammarAccess.getCommandAccess().getGroup_0(), "rule__Command__Group_0__0");
					put(grammarAccess.getIntegerExprAccess().getGroup(), "rule__IntegerExpr__Group__0");
					put(grammarAccess.getBooleanExprAccess().getGroup(), "rule__BooleanExpr__Group__0");
					put(grammarAccess.getIdentifierExprAccess().getGroup(), "rule__IdentifierExpr__Group__0");
					put(grammarAccess.getIdentifierExprAccess().getGroup_1(), "rule__IdentifierExpr__Group_1__0");
					put(grammarAccess.getSetExprAccess().getGroup(), "rule__SetExpr__Group__0");
					put(grammarAccess.getAtomicConstraintExprAccess().getGroup(), "rule__AtomicConstraintExpr__Group__0");
					put(grammarAccess.getConstraintExprAccess().getGroup(), "rule__ConstraintExpr__Group__0");
					put(grammarAccess.getConstraintExprAccess().getGroup_1_0(), "rule__ConstraintExpr__Group_1_0__0");
					put(grammarAccess.getConstraintExprAccess().getGroup_1_0_1(), "rule__ConstraintExpr__Group_1_0_1__0");
					put(grammarAccess.getIfConditionAccess().getGroup(), "rule__IfCondition__Group__0");
					put(grammarAccess.getIfConditionAccess().getGroup_6(), "rule__IfCondition__Group_6__0");
					put(grammarAccess.getForeachSetAccess().getGroup(), "rule__ForeachSet__Group__0");
					put(grammarAccess.getLeavesAccess().getGroup(), "rule__Leaves__Group__0");
					put(grammarAccess.getGetConstraintsAccess().getGroup(), "rule__GetConstraints__Group__0");
					put(grammarAccess.getComputeConstraintsAccess().getGroup(), "rule__ComputeConstraints__Group__0");
					put(grammarAccess.getComputeConstraintsAccess().getGroup_2(), "rule__ComputeConstraints__Group_2__0");
					put(grammarAccess.getGetFGroupsAccess().getGroup(), "rule__GetFGroups__Group__0");
					put(grammarAccess.getComputeFGroupsAccess().getGroup(), "rule__ComputeFGroups__Group__0");
					put(grammarAccess.getPairwiseCommandAccess().getGroup(), "rule__PairwiseCommand__Group__0");
					put(grammarAccess.getPairwiseCommandAccess().getGroup_2(), "rule__PairwiseCommand__Group_2__0");
					put(grammarAccess.getPairwiseCommandAccess().getGroup_3(), "rule__PairwiseCommand__Group_3__0");
					put(grammarAccess.getAnalysisOperationAccess().getGroup(), "rule__AnalysisOperation__Group__0");
					put(grammarAccess.getSetCardAccess().getGroup(), "rule__SetCard__Group__0");
					put(grammarAccess.getSetBelongsAccess().getGroup(), "rule__SetBelongs__Group__0");
					put(grammarAccess.getSetUnionOrIntersectionAccess().getGroup(), "rule__SetUnionOrIntersection__Group__0");
					put(grammarAccess.getSetAddOrRemoveAccess().getGroup(), "rule__SetAddOrRemove__Group__0");
					put(grammarAccess.getIsEmptySetAccess().getGroup(), "rule__IsEmptySet__Group__0");
					put(grammarAccess.getSetToNamesAccess().getGroup(), "rule__SetToNames__Group__0");
					put(grammarAccess.getFeatureOperationAccess().getGroup(), "rule__FeatureOperation__Group__0");
					put(grammarAccess.getStringConcatAccess().getGroup(), "rule__StringConcat__Group__0");
					put(grammarAccess.getStringSubstringAccess().getGroup(), "rule__StringSubstring__Group__0");
					put(grammarAccess.getStringIndexOfAccess().getGroup(), "rule__StringIndexOf__Group__0");
					put(grammarAccess.getStringLengthAccess().getGroup(), "rule__StringLength__Group__0");
					put(grammarAccess.getCompareAccess().getGroup(), "rule__Compare__Group__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getParameterAccess().getGroup_2(), "rule__Parameter__Group_2__0");
					put(grammarAccess.getLoadGenericAccess().getGroup(), "rule__LoadGeneric__Group__0");
					put(grammarAccess.getLoadGenericAccess().getGroup_2(), "rule__LoadGeneric__Group_2__0");
					put(grammarAccess.getLoadGenericAccess().getGroup_3(), "rule__LoadGeneric__Group_3__0");
					put(grammarAccess.getCTCRCommandAccess().getGroup(), "rule__CTCRCommand__Group__0");
					put(grammarAccess.getMergeAccess().getGroup(), "rule__Merge__Group__0");
					put(grammarAccess.getMergeAccess().getGroup_4_0(), "rule__Merge__Group_4_0__0");
					put(grammarAccess.getLFMArgsAccess().getGroup(), "rule__LFMArgs__Group__0");
					put(grammarAccess.getLFMArgsAccess().getGroup_1(), "rule__LFMArgs__Group_1__0");
					put(grammarAccess.getAggregateMergeAccess().getGroup(), "rule__AggregateMerge__Group__0");
					put(grammarAccess.getAggregateMergeAccess().getGroup_1(), "rule__AggregateMerge__Group_1__0");
					put(grammarAccess.getAggregateMergeAccess().getGroup_3_0(), "rule__AggregateMerge__Group_3_0__0");
					put(grammarAccess.getSynthesisAccess().getGroup(), "rule__Synthesis__Group__0");
					put(grammarAccess.getSynthesisAccess().getGroup_3(), "rule__Synthesis__Group_3__0");
					put(grammarAccess.getSynthesisAccess().getGroup_4(), "rule__Synthesis__Group_4__0");
					put(grammarAccess.getKnowledgeSpecificationAccess().getGroup(), "rule__KnowledgeSpecification__Group__0");
					put(grammarAccess.getKnowledgeSpecificationAccess().getGroup_2(), "rule__KnowledgeSpecification__Group_2__0");
					put(grammarAccess.getKnowledgeSpecificationAccess().getGroup_3(), "rule__KnowledgeSpecification__Group_3__0");
					put(grammarAccess.getHierarchySpecificationAccess().getGroup(), "rule__HierarchySpecification__Group__0");
					put(grammarAccess.getHierarchySpecificationAccess().getGroup_1_1(), "rule__HierarchySpecification__Group_1_1__0");
					put(grammarAccess.getHProductionAccess().getGroup(), "rule__HProduction__Group__0");
					put(grammarAccess.getGroupsSpecificationAccess().getGroup(), "rule__GroupsSpecification__Group__0");
					put(grammarAccess.getGroupsSpecificationAccess().getGroup_1(), "rule__GroupsSpecification__Group_1__0");
					put(grammarAccess.getXorGroupSpecAccess().getGroup(), "rule__XorGroupSpec__Group__0");
					put(grammarAccess.getMtxGroupSpecAccess().getGroup(), "rule__MtxGroupSpec__Group__0");
					put(grammarAccess.getOrGroupSpecAccess().getGroup(), "rule__OrGroupSpec__Group__0");
					put(grammarAccess.getConstraintsSpecificationAccess().getGroup(), "rule__ConstraintsSpecification__Group__0");
					put(grammarAccess.getSliceAccess().getGroup(), "rule__Slice__Group__0");
					put(grammarAccess.getAggregateAccess().getGroup(), "rule__Aggregate__Group__0");
					put(grammarAccess.getAggregateAccess().getGroup_2_0(), "rule__Aggregate__Group_2_0__0");
					put(grammarAccess.getAggregateAccess().getGroup_3(), "rule__Aggregate__Group_3__0");
					put(grammarAccess.getInsertAccess().getGroup(), "rule__Insert__Group__0");
					put(grammarAccess.getRemoveFeatureAccess().getGroup(), "rule__RemoveFeature__Group__0");
					put(grammarAccess.getRenameFeatureAccess().getGroup(), "rule__RenameFeature__Group__0");
					put(grammarAccess.getExtractAccess().getGroup(), "rule__Extract__Group__0");
					put(grammarAccess.getAssertionAccess().getGroup(), "rule__Assertion__Group__0");
					put(grammarAccess.getVariableNullAccess().getGroup(), "rule__VariableNull__Group__0");
					put(grammarAccess.getExportAccess().getGroup(), "rule__Export__Group__0");
					put(grammarAccess.getHiddenAccess().getGroup(), "rule__Hidden__Group__0");
					put(grammarAccess.getLVidentifierAccess().getGroup(), "rule__LVidentifier__Group__0");
					put(grammarAccess.getLVidentifierAccess().getGroup_1(), "rule__LVidentifier__Group_1__0");
					put(grammarAccess.getDependencyAccess().getGroup(), "rule__Dependency__Group__0");
					put(grammarAccess.getCreateConfigurationAccess().getGroup(), "rule__CreateConfiguration__Group__0");
					put(grammarAccess.getCompleteConfigurationAccess().getGroup(), "rule__CompleteConfiguration__Group__0");
					put(grammarAccess.getSelectionFeatureAccess().getGroup(), "rule__SelectionFeature__Group__0");
					put(grammarAccess.getAutoConfigurationAccess().getGroup(), "rule__AutoConfiguration__Group__0");
					put(grammarAccess.getSelectedConfigurationAccess().getGroup(), "rule__SelectedConfiguration__Group__0");
					put(grammarAccess.getDeselectedConfigurationAccess().getGroup(), "rule__DeselectedConfiguration__Group__0");
					put(grammarAccess.getUnselectedConfigurationAccess().getGroup(), "rule__UnselectedConfiguration__Group__0");
					put(grammarAccess.getAsFMAccess().getGroup(), "rule__AsFM__Group__0");
					put(grammarAccess.getMapAccess().getGroup(), "rule__Map__Group__0");
					put(grammarAccess.getUnMapAccess().getGroup(), "rule__UnMap__Group__0");
					put(grammarAccess.getCleanUpAccess().getGroup(), "rule__CleanUp__Group__0");
					put(grammarAccess.getCoresAccess().getGroup(), "rule__Cores__Group__0");
					put(grammarAccess.getDeadsAccess().getGroup(), "rule__Deads__Group__0");
					put(grammarAccess.getFullMandatorysAccess().getGroup(), "rule__FullMandatorys__Group__0");
					put(grammarAccess.getCliquesAccess().getGroup(), "rule__Cliques__Group__0");
					put(grammarAccess.getScriptDefinitionAccess().getGroup(), "rule__ScriptDefinition__Group__0");
					put(grammarAccess.getExistAccess().getGroup(), "rule__Exist__Group__0");
					put(grammarAccess.getIsConflictingAccess().getGroup(), "rule__IsConflicting__Group__0");
					put(grammarAccess.getListingAccess().getGroup(), "rule__Listing__Group__0");
					put(grammarAccess.getCopyVariableAccess().getGroup(), "rule__CopyVariable__Group__0");
					put(grammarAccess.getRemoveVariableAccess().getGroup(), "rule__RemoveVariable__Group__0");
					put(grammarAccess.getConvertAccess().getGroup(), "rule__Convert__Group__0");
					put(grammarAccess.getFMLSaveAccess().getGroup(), "rule__FMLSave__Group__0");
					put(grammarAccess.getHierarchyAccess().getGroup(), "rule__Hierarchy__Group__0");
					put(grammarAccess.getPrinterUtilityAccess().getGroup(), "rule__PrinterUtility__Group__0");
					put(grammarAccess.getLArgsAccess().getGroup(), "rule__LArgs__Group__0");
					put(grammarAccess.getLArgsAccess().getGroup_1(), "rule__LArgs__Group_1__0");
					put(grammarAccess.getGDisplayAccess().getGroup(), "rule__GDisplay__Group__0");
					put(grammarAccess.getGListingAccess().getGroup_1(), "rule__GListing__Group_1__0");
					put(grammarAccess.getMandatoryEditAccess().getGroup(), "rule__MandatoryEdit__Group__0");
					put(grammarAccess.getOptionalEditAccess().getGroup(), "rule__OptionalEdit__Group__0");
					put(grammarAccess.getAlternativeEditAccess().getGroup(), "rule__AlternativeEdit__Group__0");
					put(grammarAccess.getOrEditAccess().getGroup(), "rule__OrEdit__Group__0");
					put(grammarAccess.getAddConstraintAccess().getGroup(), "rule__AddConstraint__Group__0");
					put(grammarAccess.getRemoveConstraintAccess().getGroup(), "rule__RemoveConstraint__Group__0");
					put(grammarAccess.getOr_exprAccess().getGroup(), "rule__Or_expr__Group__0");
					put(grammarAccess.getOr_exprAccess().getGroup_1(), "rule__Or_expr__Group_1__0");
					put(grammarAccess.getAnd_exprAccess().getGroup(), "rule__And_expr__Group__0");
					put(grammarAccess.getAnd_exprAccess().getGroup_1(), "rule__And_expr__Group_1__0");
					put(grammarAccess.getImpl_exprAccess().getGroup(), "rule__Impl_expr__Group__0");
					put(grammarAccess.getImpl_exprAccess().getGroup_1(), "rule__Impl_expr__Group_1__0");
					put(grammarAccess.getBiimpl_exprAccess().getGroup(), "rule__Biimpl_expr__Group__0");
					put(grammarAccess.getBiimpl_exprAccess().getGroup_1(), "rule__Biimpl_expr__Group_1__0");
					put(grammarAccess.getNeg_exprAccess().getGroup(), "rule__Neg_expr__Group__0");
					put(grammarAccess.getPrimary_exprAccess().getGroup_1(), "rule__Primary_expr__Group_1__0");
					put(grammarAccess.getFeatureModelAccess().getGroup(), "rule__FeatureModel__Group__0");
					put(grammarAccess.getFeatureModelAccess().getGroup_2_0_0(), "rule__FeatureModel__Group_2_0_0__0");
					put(grammarAccess.getFeatureModelAccess().getGroup_2_0_1(), "rule__FeatureModel__Group_2_0_1__0");
					put(grammarAccess.getFeatureModelAccess().getGroup_2_0_1_0(), "rule__FeatureModel__Group_2_0_1_0__0");
					put(grammarAccess.getFeatureModelAccess().getGroup_2_0_1_1(), "rule__FeatureModel__Group_2_0_1_1__0");
					put(grammarAccess.getProductionAccess().getGroup(), "rule__Production__Group__0");
					put(grammarAccess.getOptionalAccess().getGroup(), "rule__Optional__Group__0");
					put(grammarAccess.getXorgroupAccess().getGroup(), "rule__Xorgroup__Group__0");
					put(grammarAccess.getXorgroupAccess().getGroup_2(), "rule__Xorgroup__Group_2__0");
					put(grammarAccess.getOrgroupAccess().getGroup(), "rule__Orgroup__Group__0");
					put(grammarAccess.getOrgroupAccess().getGroup_2(), "rule__Orgroup__Group_2__0");
					put(grammarAccess.getMutexgroupAccess().getGroup(), "rule__Mutexgroup__Group__0");
					put(grammarAccess.getMutexgroupAccess().getGroup_2(), "rule__Mutexgroup__Group_2__0");
					put(grammarAccess.getFML_IDENTIFIERAccess().getGroup_0(), "rule__FML_IDENTIFIER__Group_0__0");
					put(grammarAccess.getFML_IDENTIFIERAccess().getGroup_0_1(), "rule__FML_IDENTIFIER__Group_0_1__0");
					put(grammarAccess.getFML_IDENTIFIERAccess().getGroup_1(), "rule__FML_IDENTIFIER__Group_1__0");
					put(grammarAccess.getFamiliarScriptAccess().getParamsAssignment_0(), "rule__FamiliarScript__ParamsAssignment_0");
					put(grammarAccess.getFamiliarScriptAccess().getCmdsAssignment_1(), "rule__FamiliarScript__CmdsAssignment_1");
					put(grammarAccess.getFamiliarScriptAccess().getExportsAssignment_2(), "rule__FamiliarScript__ExportsAssignment_2");
					put(grammarAccess.getScriptCommandAccess().getVarAssignment_0_0(), "rule__ScriptCommand__VarAssignment_0_0");
					put(grammarAccess.getScriptCommandAccess().getMetaIDAssignment_0_1_2(), "rule__ScriptCommand__MetaIDAssignment_0_1_2");
					put(grammarAccess.getScriptCommandAccess().getCmdAssignment_0_3(), "rule__ScriptCommand__CmdAssignment_0_3");
					put(grammarAccess.getComplexCommandAccess().getLeftAssignment_0_0(), "rule__ComplexCommand__LeftAssignment_0_0");
					put(grammarAccess.getComplexCommandAccess().getOpAssignment_0_1_0_1(), "rule__ComplexCommand__OpAssignment_0_1_0_1");
					put(grammarAccess.getComplexCommandAccess().getRightAssignment_0_1_0_2(), "rule__ComplexCommand__RightAssignment_0_1_0_2");
					put(grammarAccess.getComplexCommandAccess().getOpAssignment_0_1_1_1(), "rule__ComplexCommand__OpAssignment_0_1_1_1");
					put(grammarAccess.getComplexCommandAccess().getRightAssignment_0_1_1_2(), "rule__ComplexCommand__RightAssignment_0_1_1_2");
					put(grammarAccess.getComplexCommandAccess().getCmpOpAssignment_0_1_2_1(), "rule__ComplexCommand__CmpOpAssignment_0_1_2_1");
					put(grammarAccess.getComplexCommandAccess().getRightAssignment_0_1_2_2(), "rule__ComplexCommand__RightAssignment_0_1_2_2");
					put(grammarAccess.getComplexCommandAccess().getSopAssignment_0_1_3_1(), "rule__ComplexCommand__SopAssignment_0_1_3_1");
					put(grammarAccess.getComplexCommandAccess().getRightAssignment_0_1_3_2(), "rule__ComplexCommand__RightAssignment_0_1_3_2");
					put(grammarAccess.getComplexCommandAccess().getNotAssignment_1_0(), "rule__ComplexCommand__NotAssignment_1_0");
					put(grammarAccess.getComplexCommandAccess().getBatomAssignment_1_1(), "rule__ComplexCommand__BatomAssignment_1_1");
					put(grammarAccess.getIntegerExprAccess().getValueAssignment_1(), "rule__IntegerExpr__ValueAssignment_1");
					put(grammarAccess.getBooleanExprAccess().getValAssignment_1(), "rule__BooleanExpr__ValAssignment_1");
					put(grammarAccess.getIdentifierExprAccess().getValAssignment_0(), "rule__IdentifierExpr__ValAssignment_0");
					put(grammarAccess.getIdentifierExprAccess().getMetaIDAssignment_1_2(), "rule__IdentifierExpr__MetaIDAssignment_1_2");
					put(grammarAccess.getStringExprAccess().getValAssignment(), "rule__StringExpr__ValAssignment");
					put(grammarAccess.getSetExprAccess().getEAssignment_1(), "rule__SetExpr__EAssignment_1");
					put(grammarAccess.getAtomicConstraintExprAccess().getExprAssignment_2(), "rule__AtomicConstraintExpr__ExprAssignment_2");
					put(grammarAccess.getConstraintExprAccess().getConstraintsAssignment_1_0_1_0(), "rule__ConstraintExpr__ConstraintsAssignment_1_0_1_0");
					put(grammarAccess.getConstraintExprAccess().getFmAssignment_1_1(), "rule__ConstraintExpr__FmAssignment_1_1");
					put(grammarAccess.getFeatureVariabilityOperatorAccess().getValAssignment(), "rule__FeatureVariabilityOperator__ValAssignment");
					put(grammarAccess.getIfConditionAccess().getBexprAssignment_2(), "rule__IfCondition__BexprAssignment_2");
					put(grammarAccess.getIfConditionAccess().getThenAssignment_5(), "rule__IfCondition__ThenAssignment_5");
					put(grammarAccess.getIfConditionAccess().getElseAssignment_6_1(), "rule__IfCondition__ElseAssignment_6_1");
					put(grammarAccess.getForeachSetAccess().getValAssignment_2(), "rule__ForeachSet__ValAssignment_2");
					put(grammarAccess.getForeachSetAccess().getVarAssignment_4(), "rule__ForeachSet__VarAssignment_4");
					put(grammarAccess.getForeachSetAccess().getExprsAssignment_7(), "rule__ForeachSet__ExprsAssignment_7");
					put(grammarAccess.getLTypeAccess().getValAssignment(), "rule__LType__ValAssignment");
					put(grammarAccess.getLeavesAccess().getFmAssignment_1(), "rule__Leaves__FmAssignment_1");
					put(grammarAccess.getGetConstraintsAccess().getKindOfGetAssignment_0(), "rule__GetConstraints__KindOfGetAssignment_0");
					put(grammarAccess.getGetConstraintsAccess().getFmAssignment_1(), "rule__GetConstraints__FmAssignment_1");
					put(grammarAccess.getComputeConstraintsAccess().getKindOfComputeAssignment_0(), "rule__ComputeConstraints__KindOfComputeAssignment_0");
					put(grammarAccess.getComputeConstraintsAccess().getFmAssignment_1(), "rule__ComputeConstraints__FmAssignment_1");
					put(grammarAccess.getComputeConstraintsAccess().getOverAssignment_2_0(), "rule__ComputeConstraints__OverAssignment_2_0");
					put(grammarAccess.getComputeConstraintsAccess().getFtsAssignment_2_1(), "rule__ComputeConstraints__FtsAssignment_2_1");
					put(grammarAccess.getGetFGroupsAccess().getKindOfGroupsAssignment_0(), "rule__GetFGroups__KindOfGroupsAssignment_0");
					put(grammarAccess.getGetFGroupsAccess().getFmAssignment_1(), "rule__GetFGroups__FmAssignment_1");
					put(grammarAccess.getComputeFGroupsAccess().getKindOfGroupsAssignment_0(), "rule__ComputeFGroups__KindOfGroupsAssignment_0");
					put(grammarAccess.getComputeFGroupsAccess().getFmAssignment_1(), "rule__ComputeFGroups__FmAssignment_1");
					put(grammarAccess.getPairwiseCommandAccess().getFmAssignment_1(), "rule__PairwiseCommand__FmAssignment_1");
					put(grammarAccess.getPairwiseCommandAccess().getMinimizationAssignment_2_1(), "rule__PairwiseCommand__MinimizationAssignment_2_1");
					put(grammarAccess.getPairwiseCommandAccess().getPartialAssignment_3_1(), "rule__PairwiseCommand__PartialAssignment_3_1");
					put(grammarAccess.getAnalysisOperationAccess().getOpAssignment_0(), "rule__AnalysisOperation__OpAssignment_0");
					put(grammarAccess.getAnalysisOperationAccess().getFmAssignment_1(), "rule__AnalysisOperation__FmAssignment_1");
					put(grammarAccess.getSetCardAccess().getSetAssignment_1(), "rule__SetCard__SetAssignment_1");
					put(grammarAccess.getSetBelongsAccess().getSetlAssignment_1(), "rule__SetBelongs__SetlAssignment_1");
					put(grammarAccess.getSetBelongsAccess().getSetrAssignment_2(), "rule__SetBelongs__SetrAssignment_2");
					put(grammarAccess.getSetUnionOrIntersectionAccess().getOpAssignment_0(), "rule__SetUnionOrIntersection__OpAssignment_0");
					put(grammarAccess.getSetUnionOrIntersectionAccess().getSetlAssignment_1(), "rule__SetUnionOrIntersection__SetlAssignment_1");
					put(grammarAccess.getSetUnionOrIntersectionAccess().getSetrAssignment_2(), "rule__SetUnionOrIntersection__SetrAssignment_2");
					put(grammarAccess.getSetEmptyAccess().getValAssignment(), "rule__SetEmpty__ValAssignment");
					put(grammarAccess.getSetAddOrRemoveAccess().getOpAssignment_0(), "rule__SetAddOrRemove__OpAssignment_0");
					put(grammarAccess.getSetAddOrRemoveAccess().getSetlAssignment_1(), "rule__SetAddOrRemove__SetlAssignment_1");
					put(grammarAccess.getSetAddOrRemoveAccess().getVarAssignment_2(), "rule__SetAddOrRemove__VarAssignment_2");
					put(grammarAccess.getIsEmptySetAccess().getSetAssignment_1(), "rule__IsEmptySet__SetAssignment_1");
					put(grammarAccess.getSetToNamesAccess().getSetAssignment_1(), "rule__SetToNames__SetAssignment_1");
					put(grammarAccess.getFeatureOperationAccess().getOpAssignment_0(), "rule__FeatureOperation__OpAssignment_0");
					put(grammarAccess.getFeatureOperationAccess().getFeatureAssignment_1(), "rule__FeatureOperation__FeatureAssignment_1");
					put(grammarAccess.getAncestorFeatureAccess().getValAssignment(), "rule__AncestorFeature__ValAssignment");
					put(grammarAccess.getDescendantFeatureAccess().getValAssignment(), "rule__DescendantFeature__ValAssignment");
					put(grammarAccess.getChildrenFeatureAccess().getValAssignment(), "rule__ChildrenFeature__ValAssignment");
					put(grammarAccess.getSiblingFeatureAccess().getValAssignment(), "rule__SiblingFeature__ValAssignment");
					put(grammarAccess.getParentFeatureAccess().getValAssignment(), "rule__ParentFeature__ValAssignment");
					put(grammarAccess.getNameFeatureAccess().getValAssignment(), "rule__NameFeature__ValAssignment");
					put(grammarAccess.getFMFeatureAccess().getValAssignment(), "rule__FMFeature__ValAssignment");
					put(grammarAccess.getFeatureOperatorAccess().getValAssignment(), "rule__FeatureOperator__ValAssignment");
					put(grammarAccess.getStringInitAccess().getValAssignment(), "rule__StringInit__ValAssignment");
					put(grammarAccess.getStringConcatAccess().getLstrAssignment_1(), "rule__StringConcat__LstrAssignment_1");
					put(grammarAccess.getStringConcatAccess().getRstrAssignment_2(), "rule__StringConcat__RstrAssignment_2");
					put(grammarAccess.getStringSubstringAccess().getStrAssignment_1(), "rule__StringSubstring__StrAssignment_1");
					put(grammarAccess.getStringSubstringAccess().getBeginAssignment_2(), "rule__StringSubstring__BeginAssignment_2");
					put(grammarAccess.getStringSubstringAccess().getEndAssignment_3(), "rule__StringSubstring__EndAssignment_3");
					put(grammarAccess.getStringIndexOfAccess().getStrAssignment_1(), "rule__StringIndexOf__StrAssignment_1");
					put(grammarAccess.getStringIndexOfAccess().getScharAssignment_2(), "rule__StringIndexOf__ScharAssignment_2");
					put(grammarAccess.getStringLengthAccess().getStrAssignment_1(), "rule__StringLength__StrAssignment_1");
					put(grammarAccess.getCompareAccess().getFm_leftAssignment_1(), "rule__Compare__Fm_leftAssignment_1");
					put(grammarAccess.getCompareAccess().getFm_rightAssignment_2(), "rule__Compare__Fm_rightAssignment_2");
					put(grammarAccess.getParameterAccess().getParamAssignment_1(), "rule__Parameter__ParamAssignment_1");
					put(grammarAccess.getParameterAccess().getTypedAssignment_2_0(), "rule__Parameter__TypedAssignment_2_0");
					put(grammarAccess.getParameterAccess().getTypeAssignment_2_1(), "rule__Parameter__TypeAssignment_2_1");
					put(grammarAccess.getLoadGenericAccess().getStreamAssignment_1(), "rule__LoadGeneric__StreamAssignment_1");
					put(grammarAccess.getLoadGenericAccess().getParamsAssignment_2_1(), "rule__LoadGeneric__ParamsAssignment_2_1");
					put(grammarAccess.getLoadGenericAccess().getNsAssignment_3_1(), "rule__LoadGeneric__NsAssignment_3_1");
					put(grammarAccess.getCTCRCommandAccess().getFmAssignment_1(), "rule__CTCRCommand__FmAssignment_1");
					put(grammarAccess.getMergeAccess().getBackendAssignment_1(), "rule__Merge__BackendAssignment_1");
					put(grammarAccess.getMergeAccess().getLazyAssignment_2(), "rule__Merge__LazyAssignment_2");
					put(grammarAccess.getMergeAccess().getModeAssignment_3(), "rule__Merge__ModeAssignment_3");
					put(grammarAccess.getMergeAccess().getLfmsAssignment_4_0_1(), "rule__Merge__LfmsAssignment_4_0_1");
					put(grammarAccess.getMergeAccess().getFmsAssignment_4_1(), "rule__Merge__FmsAssignment_4_1");
					put(grammarAccess.getLFMArgsAccess().getLfmsAssignment_0(), "rule__LFMArgs__LfmsAssignment_0");
					put(grammarAccess.getLFMArgsAccess().getLfmsAssignment_1_1(), "rule__LFMArgs__LfmsAssignment_1_1");
					put(grammarAccess.getAggregateMergeAccess().getHierarchySpecifiedAssignment_1_0(), "rule__AggregateMerge__HierarchySpecifiedAssignment_1_0");
					put(grammarAccess.getAggregateMergeAccess().getHierarchyStrategyAssignment_1_1(), "rule__AggregateMerge__HierarchyStrategyAssignment_1_1");
					put(grammarAccess.getAggregateMergeAccess().getModeAssignment_2(), "rule__AggregateMerge__ModeAssignment_2");
					put(grammarAccess.getAggregateMergeAccess().getLfmsAssignment_3_0_1(), "rule__AggregateMerge__LfmsAssignment_3_0_1");
					put(grammarAccess.getAggregateMergeAccess().getFmsAssignment_3_1(), "rule__AggregateMerge__FmsAssignment_3_1");
					put(grammarAccess.getSynthesisAccess().getInteractiveAssignment_1(), "rule__Synthesis__InteractiveAssignment_1");
					put(grammarAccess.getSynthesisAccess().getFmAssignment_2(), "rule__Synthesis__FmAssignment_2");
					put(grammarAccess.getSynthesisAccess().getOverAssignment_3_0(), "rule__Synthesis__OverAssignment_3_0");
					put(grammarAccess.getSynthesisAccess().getFtsAssignment_3_1(), "rule__Synthesis__FtsAssignment_3_1");
					put(grammarAccess.getSynthesisAccess().getKstAssignment_4_1(), "rule__Synthesis__KstAssignment_4_1");
					put(grammarAccess.getKnowledgeSpecificationAccess().getHierarchyAssignment_1(), "rule__KnowledgeSpecification__HierarchyAssignment_1");
					put(grammarAccess.getKnowledgeSpecificationAccess().getGroupsAssignment_2_1(), "rule__KnowledgeSpecification__GroupsAssignment_2_1");
					put(grammarAccess.getKnowledgeSpecificationAccess().getConstraintsAssignment_3_1(), "rule__KnowledgeSpecification__ConstraintsAssignment_3_1");
					put(grammarAccess.getHierarchySpecificationAccess().getHierarchyAssignment_1_0(), "rule__HierarchySpecification__HierarchyAssignment_1_0");
					put(grammarAccess.getHierarchySpecificationAccess().getFeaturesAssignment_1_1_0(), "rule__HierarchySpecification__FeaturesAssignment_1_1_0");
					put(grammarAccess.getHProductionAccess().getNameAssignment_0(), "rule__HProduction__NameAssignment_0");
					put(grammarAccess.getHProductionAccess().getFeaturesAssignment_2(), "rule__HProduction__FeaturesAssignment_2");
					put(grammarAccess.getGroupsSpecificationAccess().getGroupsAssignment_1_0(), "rule__GroupsSpecification__GroupsAssignment_1_0");
					put(grammarAccess.getXorGroupSpecAccess().getNameAssignment_2(), "rule__XorGroupSpec__NameAssignment_2");
					put(grammarAccess.getXorGroupSpecAccess().getFeaturesAssignment_4(), "rule__XorGroupSpec__FeaturesAssignment_4");
					put(grammarAccess.getMtxGroupSpecAccess().getNameAssignment_2(), "rule__MtxGroupSpec__NameAssignment_2");
					put(grammarAccess.getMtxGroupSpecAccess().getFeaturesAssignment_4(), "rule__MtxGroupSpec__FeaturesAssignment_4");
					put(grammarAccess.getOrGroupSpecAccess().getNameAssignment_2(), "rule__OrGroupSpec__NameAssignment_2");
					put(grammarAccess.getOrGroupSpecAccess().getFeaturesAssignment_4(), "rule__OrGroupSpec__FeaturesAssignment_4");
					put(grammarAccess.getConstraintsSpecificationAccess().getCstsAssignment_1(), "rule__ConstraintsSpecification__CstsAssignment_1");
					put(grammarAccess.getSliceAccess().getFmAssignment_1(), "rule__Slice__FmAssignment_1");
					put(grammarAccess.getSliceAccess().getModeAssignment_2(), "rule__Slice__ModeAssignment_2");
					put(grammarAccess.getSliceAccess().getFtsAssignment_3(), "rule__Slice__FtsAssignment_3");
					put(grammarAccess.getAggregateAccess().getRenamingsAssignment_1(), "rule__Aggregate__RenamingsAssignment_1");
					put(grammarAccess.getAggregateAccess().getFmsAssignment_2_0_1(), "rule__Aggregate__FmsAssignment_2_0_1");
					put(grammarAccess.getAggregateAccess().getSfmsAssignment_2_1(), "rule__Aggregate__SfmsAssignment_2_1");
					put(grammarAccess.getAggregateAccess().getMappingAssignment_3_1(), "rule__Aggregate__MappingAssignment_3_1");
					put(grammarAccess.getInsertAccess().getAspectfmAssignment_1(), "rule__Insert__AspectfmAssignment_1");
					put(grammarAccess.getInsertAccess().getBaseftAssignment_3(), "rule__Insert__BaseftAssignment_3");
					put(grammarAccess.getInsertAccess().getOpAssignment_5(), "rule__Insert__OpAssignment_5");
					put(grammarAccess.getRemoveFeatureAccess().getFeatureAssignment_1(), "rule__RemoveFeature__FeatureAssignment_1");
					put(grammarAccess.getRenameFeatureAccess().getFeatureAssignment_1(), "rule__RenameFeature__FeatureAssignment_1");
					put(grammarAccess.getRenameFeatureAccess().getFeatureNewAssignment_3(), "rule__RenameFeature__FeatureNewAssignment_3");
					put(grammarAccess.getExtractAccess().getRootfeatureAssignment_1(), "rule__Extract__RootfeatureAssignment_1");
					put(grammarAccess.getAssertionAccess().getAssertionAssignment_2(), "rule__Assertion__AssertionAssignment_2");
					put(grammarAccess.getVariableNullAccess().getVarAssignment_1(), "rule__VariableNull__VarAssignment_1");
					put(grammarAccess.getExportAccess().getArgAssignment_1(), "rule__Export__ArgAssignment_1");
					put(grammarAccess.getHiddenAccess().getArgAssignment_1(), "rule__Hidden__ArgAssignment_1");
					put(grammarAccess.getLVidentifierAccess().getArgsAssignment_0(), "rule__LVidentifier__ArgsAssignment_0");
					put(grammarAccess.getLVidentifierAccess().getArgsAssignment_1_1(), "rule__LVidentifier__ArgsAssignment_1_1");
					put(grammarAccess.getDependencyAccess().getVarAssignment_1(), "rule__Dependency__VarAssignment_1");
					put(grammarAccess.getCreateConfigurationAccess().getFmAssignment_1(), "rule__CreateConfiguration__FmAssignment_1");
					put(grammarAccess.getCompleteConfigurationAccess().getConfigAssignment_1(), "rule__CompleteConfiguration__ConfigAssignment_1");
					put(grammarAccess.getSelectionFeatureAccess().getOpAssignment_0(), "rule__SelectionFeature__OpAssignment_0");
					put(grammarAccess.getSelectionFeatureAccess().getFtsAssignment_1(), "rule__SelectionFeature__FtsAssignment_1");
					put(grammarAccess.getSelectionFeatureAccess().getConfigAssignment_3(), "rule__SelectionFeature__ConfigAssignment_3");
					put(grammarAccess.getFeatureExpressionAccess().getFtAssignment_0(), "rule__FeatureExpression__FtAssignment_0");
					put(grammarAccess.getFeatureExpressionAccess().getFtAssignment_1(), "rule__FeatureExpression__FtAssignment_1");
					put(grammarAccess.getAutoConfigurationAccess().getConfigAssignment_1(), "rule__AutoConfiguration__ConfigAssignment_1");
					put(grammarAccess.getAutoConfigurationAccess().getModeAssignment_2(), "rule__AutoConfiguration__ModeAssignment_2");
					put(grammarAccess.getSelectedConfigurationAccess().getConfigAssignment_1(), "rule__SelectedConfiguration__ConfigAssignment_1");
					put(grammarAccess.getDeselectedConfigurationAccess().getConfigAssignment_1(), "rule__DeselectedConfiguration__ConfigAssignment_1");
					put(grammarAccess.getUnselectedConfigurationAccess().getConfigAssignment_1(), "rule__UnselectedConfiguration__ConfigAssignment_1");
					put(grammarAccess.getAsFMAccess().getConfAssignment_1(), "rule__AsFM__ConfAssignment_1");
					put(grammarAccess.getMapAccess().getFmAssignment_1(), "rule__Map__FmAssignment_1");
					put(grammarAccess.getMapAccess().getCstAssignment_3(), "rule__Map__CstAssignment_3");
					put(grammarAccess.getUnMapAccess().getFmAssignment_1(), "rule__UnMap__FmAssignment_1");
					put(grammarAccess.getCleanUpAccess().getFmAssignment_1(), "rule__CleanUp__FmAssignment_1");
					put(grammarAccess.getCoresAccess().getFmAssignment_1(), "rule__Cores__FmAssignment_1");
					put(grammarAccess.getDeadsAccess().getFmAssignment_1(), "rule__Deads__FmAssignment_1");
					put(grammarAccess.getFullMandatorysAccess().getFmAssignment_1(), "rule__FullMandatorys__FmAssignment_1");
					put(grammarAccess.getCliquesAccess().getFmAssignment_1(), "rule__Cliques__FmAssignment_1");
					put(grammarAccess.getScriptDefinitionAccess().getParamsAssignment_1(), "rule__ScriptDefinition__ParamsAssignment_1");
					put(grammarAccess.getScriptDefinitionAccess().getCmdsAssignment_2(), "rule__ScriptDefinition__CmdsAssignment_2");
					put(grammarAccess.getScriptDefinitionAccess().getExportsAssignment_3(), "rule__ScriptDefinition__ExportsAssignment_3");
					put(grammarAccess.getShellAccess().getCmdAssignment(), "rule__Shell__CmdAssignment");
					put(grammarAccess.getExitAccess().getValAssignment(), "rule__Exit__ValAssignment");
					put(grammarAccess.getExistAccess().getValAssignment_0(), "rule__Exist__ValAssignment_0");
					put(grammarAccess.getExistAccess().getVarAssignment_1(), "rule__Exist__VarAssignment_1");
					put(grammarAccess.getIsConflictingAccess().getValAssignment_0(), "rule__IsConflicting__ValAssignment_0");
					put(grammarAccess.getIsConflictingAccess().getVarAssignment_1(), "rule__IsConflicting__VarAssignment_1");
					put(grammarAccess.getListingAccess().getValAssignment_0(), "rule__Listing__ValAssignment_0");
					put(grammarAccess.getListingAccess().getOptAssignment_1(), "rule__Listing__OptAssignment_1");
					put(grammarAccess.getStateAccess().getValAssignment(), "rule__State__ValAssignment");
					put(grammarAccess.getCopyVariableAccess().getVidAssignment_1(), "rule__CopyVariable__VidAssignment_1");
					put(grammarAccess.getRemoveVariableAccess().getVidAssignment_1(), "rule__RemoveVariable__VidAssignment_1");
					put(grammarAccess.getConvertAccess().getVAssignment_1(), "rule__Convert__VAssignment_1");
					put(grammarAccess.getConvertAccess().getFormatAssignment_3(), "rule__Convert__FormatAssignment_3");
					put(grammarAccess.getFMLSaveAccess().getVAssignment_1(), "rule__FMLSave__VAssignment_1");
					put(grammarAccess.getFMLSaveAccess().getFormatAssignment_3(), "rule__FMLSave__FormatAssignment_3");
					put(grammarAccess.getHierarchyAccess().getFmAssignment_1(), "rule__Hierarchy__FmAssignment_1");
					put(grammarAccess.getPrinterUtilityAccess().getOpAssignment_0(), "rule__PrinterUtility__OpAssignment_0");
					put(grammarAccess.getPrinterUtilityAccess().getArgAssignment_1(), "rule__PrinterUtility__ArgAssignment_1");
					put(grammarAccess.getLArgsAccess().getArgsAssignment_0(), "rule__LArgs__ArgsAssignment_0");
					put(grammarAccess.getLArgsAccess().getArgsAssignment_1_1(), "rule__LArgs__ArgsAssignment_1_1");
					put(grammarAccess.getGDisplayAccess().getCmdDisplayAssignment_0(), "rule__GDisplay__CmdDisplayAssignment_0");
					put(grammarAccess.getGDisplayAccess().getVarAssignment_1(), "rule__GDisplay__VarAssignment_1");
					put(grammarAccess.getGListingAccess().getCmdAssignment_0(), "rule__GListing__CmdAssignment_0");
					put(grammarAccess.getMandatoryEditAccess().getFtAssignment_1(), "rule__MandatoryEdit__FtAssignment_1");
					put(grammarAccess.getOptionalEditAccess().getFtAssignment_1(), "rule__OptionalEdit__FtAssignment_1");
					put(grammarAccess.getAlternativeEditAccess().getFtsAssignment_1(), "rule__AlternativeEdit__FtsAssignment_1");
					put(grammarAccess.getOrEditAccess().getFtsAssignment_1(), "rule__OrEdit__FtsAssignment_1");
					put(grammarAccess.getAddConstraintAccess().getCstAssignment_1(), "rule__AddConstraint__CstAssignment_1");
					put(grammarAccess.getAddConstraintAccess().getFmAssignment_3(), "rule__AddConstraint__FmAssignment_3");
					put(grammarAccess.getRemoveConstraintAccess().getCstAssignment_1(), "rule__RemoveConstraint__CstAssignment_1");
					put(grammarAccess.getRemoveConstraintAccess().getFmAssignment_3(), "rule__RemoveConstraint__FmAssignment_3");
					put(grammarAccess.getOr_exprAccess().getRightAssignment_1_2(), "rule__Or_expr__RightAssignment_1_2");
					put(grammarAccess.getAnd_exprAccess().getRightAssignment_1_2(), "rule__And_expr__RightAssignment_1_2");
					put(grammarAccess.getImpl_exprAccess().getRightAssignment_1_2(), "rule__Impl_expr__RightAssignment_1_2");
					put(grammarAccess.getBiimpl_exprAccess().getRightAssignment_1_2(), "rule__Biimpl_expr__RightAssignment_1_2");
					put(grammarAccess.getNeg_exprAccess().getExprAssignment_1(), "rule__Neg_expr__ExprAssignment_1");
					put(grammarAccess.getPrimary_exprAccess().getNameAssignment_0(), "rule__Primary_expr__NameAssignment_0");
					put(grammarAccess.getFeatureModelAccess().getRootAssignment_2_0_0_0(), "rule__FeatureModel__RootAssignment_2_0_0_0");
					put(grammarAccess.getFeatureModelAccess().getFeaturesAssignment_2_0_1_0_0(), "rule__FeatureModel__FeaturesAssignment_2_0_1_0_0");
					put(grammarAccess.getFeatureModelAccess().getExprAssignment_2_0_1_1_0(), "rule__FeatureModel__ExprAssignment_2_0_1_1_0");
					put(grammarAccess.getFeatureModelAccess().getFileAssignment_2_1(), "rule__FeatureModel__FileAssignment_2_1");
					put(grammarAccess.getProductionAccess().getNameAssignment_0(), "rule__Production__NameAssignment_0");
					put(grammarAccess.getProductionAccess().getFeaturesAssignment_2(), "rule__Production__FeaturesAssignment_2");
					put(grammarAccess.getMandatoryAccess().getNameAssignment(), "rule__Mandatory__NameAssignment");
					put(grammarAccess.getOptionalAccess().getNameAssignment_1(), "rule__Optional__NameAssignment_1");
					put(grammarAccess.getXorgroupAccess().getFeaturesAssignment_1(), "rule__Xorgroup__FeaturesAssignment_1");
					put(grammarAccess.getXorgroupAccess().getFeaturesAssignment_2_1(), "rule__Xorgroup__FeaturesAssignment_2_1");
					put(grammarAccess.getOrgroupAccess().getFeaturesAssignment_1(), "rule__Orgroup__FeaturesAssignment_1");
					put(grammarAccess.getOrgroupAccess().getFeaturesAssignment_2_1(), "rule__Orgroup__FeaturesAssignment_2_1");
					put(grammarAccess.getMutexgroupAccess().getFeaturesAssignment_1(), "rule__Mutexgroup__FeaturesAssignment_1");
					put(grammarAccess.getMutexgroupAccess().getFeaturesAssignment_2_1(), "rule__Mutexgroup__FeaturesAssignment_2_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalFMLParser typedParser = (org.xtext.example.mydsl.ui.contentassist.antlr.internal.InternalFMLParser) parser;
			typedParser.entryRuleFamiliarScript();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public FMLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(FMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
