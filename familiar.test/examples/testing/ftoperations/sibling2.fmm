// mysibling
// emulate 'sibling' operation considering fm3
// see mysibling for a macro which generalizes the example
fm3 = FM (A : B [C] ; B : (E|F|G)+ ; )


se3 = sibling fm3.E // sibling fm3.E = {F, G}

name_ft = name fm3.E
parent_ft = parent fm3.E
children_parent_ft = children parent_ft
result = setEmpty
foreach (c in children_parent_ft) do name_c = name c if (not (name_c eq name_ft)) then setAdd result c end end
print result
nresult = size result
TWO = 2
assert (nresult eq TWO)
assert (se3 eq result)

exit