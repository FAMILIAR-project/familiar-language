// testing the 'name' operation
// syntacs: b = name a
// a is a variable of feature type
// b is a string whose value is the name of the feature 'a' 
// b = name fm1::A
// b is a string whose value is the name of the feature A (present in the feature model fm1)
// equivalent to write : b = "A"


fm1 = FM (A : B [C] ; B : E F ; C : (I|J) ; )
fm2 = FM (A : B C E ; C : (I|J)+ ; )
root_fm1 = root fm1
b = name root_fm1
b2 = "A"
assert (b eq b2)
b3 = name fm1.A
b4 = name fm2.A
assert (b eq b3) // b3 (aka "A") is the root name of fm1
assert (b3 eq b2) // b3: "A"
assert (b2 eq b4) // b4: "A"
assert (b3 eq b4)
f = name fm1.F // equivalent 
f2 = name F // not ambigous: F is only present in fm1
assert (f eq f2)
i = name fm1.I
i2 = name fm2.I
assert (i eq i2)
i3 = name I // ambigous! i3 = null
bi3 = isNull i3 // bi3 is true
bi2 = isNull i2 
bi = isNull i
run "assertTrue" bi3
run "assertFalse" bi2
run "assertFalse" bi
foreach (bval in bi*) do print bval end

ls
exit