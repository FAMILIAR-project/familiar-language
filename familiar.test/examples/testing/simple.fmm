run "ns.fmm" into medical
run "types.fmm" into image
exist? medical.QoS.fm2
exist? QoS.fm2
fm2cmp = compare image.fm2 medical.QoS.fm2 // SPECIALIZATION
QoSwins = merge intersection { image.fm2 medical.QoS.fm2 }
print_var medical.QoS.fm2
print_var image.fm2
ls
exist? medical.service.MI.medicalimage
exist? medical.service.deployment.griddeployment
run "examples/compare/fm2.fmm" into FM2
run "examples/compare/fm2.fmm"
exist? image.fm2
exist? medical.QoS.fm2
exist? FM2.fm2
exist? fm2
fm9exist = exist? fm9 // hidden
//assertFalse (fm9exist)
vfm5exist = exist? vfm5
run "assertTrue" vfm5exist into devnull
//assertTrue (vfm5exist)
vfm7exist = exist? vfm7 // hidden
run "assertFalse" vfm7exist
//assertFalse (vfm7exist)
run "/Users/mathieuacher/Desktop/WorkspaceOpenEmbedd/FMScript/examples/testing/ns.fmm" into FOO
assert (FOO.vfm5 eq medical.vfm5)
printinfo FOO.vfm5
printinfo medical.vfm5
run "/Users/mathieuacher/Desktop/WorkspaceOpenEmbedd/FMScript/examples/testing/ns.fmm" // without namespace
assert (vfm5 eq medical.vfm5)
printinfo griddeployment 
//run "/Users/mathieuacher/Desktop/WorkspaceOpenEmbedd/FMScript/examples/testing/simple.fmm" into FAIL // recursive